并发线程池到底设置多大呢？通常有两种错误的设置
        1. CPU 密集型应用，线程池大小设置为 N + 1
        2. IO 密集型应用，线程池大小设置为 2N

首先我们从反面来看，假设这个说法是成立的，那我们在一台服务器上部署多少个服务都无所谓了。因为线程池的大小只能服务器的核数有关，所以这个说法是不正确的。那具体应该怎么设置大小呢？
假设这个应用是两者混合型的，其中任务即有 CPU 密集，也有 IO 密集型的，那么我们改怎么设置呢？是不是只能抛硬盘来决定呢？

Little's Law（利特尔法则） * 一个系统请求数等于请求的到达率与平均每个单独请求花费的时间之乘积

假设服务器单核的，对应业务需要保证请求量（QPS）：10 ，真正处理一个请求需要 1 秒，那么服务器每个时刻都有 10 个请求在处理，即需要 10 个线程

   同样，我们可以使用利特尔法则（Little’s law）来判定线程池大小。我们只需计算请求到达率和请求处理的平均时间。然后，将上述值放到利特尔法则（Little’s law）就可以算出系统平均请求数。
估算公式如下(实践请看Demo_ThreadPool) :
| --------------------------------------------------------------------|
| 线程池大小 = （（线程 IO time + 线程 CPU time ）/线程 CPU time ） CPU数目**|
| --------------------------------------------------------------------|